# install.packages("tidyverse")
# install.packages("devtools")
# install.packages("remotes")
# install.packages("reticulate")
# remotes::install_github("rstudio/keras", dependencies = TRUE)
# install.packages("tensorflow")
library(devtools)
library(remotes)
library(reticulate)
library(tidyverse)
library(keras)
install.packages("tidyverse")
install.packages("devtools")
install.packages("remotes")
install.packages("reticulate")
remotes::install_github("rstudio/keras", dependencies = TRUE)
install.packages("tensorflow")
library(devtools)
library(remotes)
library(reticulate)
library(tidyverse)
library(keras)
library(tensorflow)
# python 지정
use_python("C:/ProgramData/Anaconda3/python")
py_discover_config()
Y
# set enviroment using reticulate : python_version 확인 반드시 필요함
conda_create("r-reticulate")
use_condaenv("r-reticulate")
conda_install("r-reticulate", 'keras', pip = TRUE, python_version = "3.7")
# install_keras
install_keras()
#
mnist <- keras::dataset_mnist()
mnist <- dataset_mnist()
# python 지정
library(reticulate)
use_python('C:/ProgramData/Anaconda3/envs/r-tensorflow/python.exe')
use_virtualenv('C:/ProgramData/Anaconda3/envs/r-tensorflow')
use_condaenv('r-tensorflow')
model <- keras_model_sequential()
library(keras)
model <- keras_model_sequential()
# python 지정
library(reticulate)
use_python('C:/ProgramData/Anaconda3/envs/r-tensorflow/python.exe')
use_virtualenv('C:/ProgramData/Anaconda3/envs/r-tensorflow')
use_condaenv('r-tensorflow')
# python 지정
library(reticulate)
use_python('C:/ProgramData/Anaconda3/envs/r-tensorflow/python.exe')
use_virtualenv('C:/ProgramData/Anaconda3/envs/r-tensorflow')
use_condaenv('r-tensorflow')
model <- keras_model_sequential()
library(keras)
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu', input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = 'softmax')
# install.packages("tidyverse")
# install.packages("devtools")
# install.packages("remotes")
# install.packages("reticulate")
# remotes::install_github("rstudio/keras", dependencies = TRUE)
# install.packages("tensorflow")
library(devtools)
library(remotes)
library(reticulate)
library(tidyverse)
library(keras)
# python 지정
library(reticulate)
use_python('C:/ProgramData/Anaconda3/envs/r-tensorflow/python.exe')
use_virtualenv('C:/ProgramData/Anaconda3/envs/r-tensorflow')
use_condaenv('r-tensorflow')
model <- keras_model_sequential()
conda_python('C:/ProgramData/Anaconda3/envs/r-tensorflow', conda = anaconda)
model <- keras_model_sequential()
library(reticulate)
conda_version()
conda_list()
use_python('C:\\ProgramData\\Anaconda3\\envs\\r-tensorflow\\python.exe')
use_virtualenv('C:/ProgramData/Anaconda3/envs/r-tensorflow')
use_condaenv('r-tensorflow')
conda_python('C:/ProgramData/Anaconda3/envs/r-tensorflow', conda = anaconda)
install.packages("keras")
install.packages("keras")
library(keras)
# --------------------------------------------------------------------------------------------- #
# test
install.packages("r-reticulate")
# install.packages("tidyverse")
# install.packages("devtools")
# install.packages("remotes")
# install.packages("reticulate")
# remotes::install_github("rstudio/keras", dependencies = TRUE)
# install.packages("tensorflow")
library(devtools)
library(remotes)
library(reticulate)
library(tidyverse)
library(keras)
# reshape
x_train <- array_reshape(x_train, c(nrow(x_train), 784))
x_test <- array_reshape(x_test, c(nrow(x_test), 784))
model <- keras_model_sequential()
library(keras)
library(keras)
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu', input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = 'softmax')
summary(model)
gwd()
getwd()
setwd(../)
setwd(../)
setwd("../")
getwd()
ls
list()
getwd(C:\Users\HP\Dropbox\빅데이터_3조 공유폴더\김소연)
C:\Users\HP\Dropbox\빅데이터_3조 공유폴더\김소연
getwd("C:\Users\HP\Dropbox\빅데이터_3조 공유폴더\김소연")
getwd("./Dropbox/빅데이터_3조 공유폴더/김소연")
setwd("./Dropbox/빅데이터_3조 공유폴더/김소연")
getwd()
ls()
library(readxl)
path <- "../차철성/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.xlsx)_시즌별 구분/2020빅콘테스트_스포츠투아이_제공데이터_2016.xlsx"
test <- read_excel(path=path, sheet=1)
c(2016:2020)
(2016:2020)
path_head <- "../차철성/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.xlsx)_시즌별 구분/2020빅콘테스트_스포츠투아이_제공데이터_"
path_tail <- ".xlsx"
year <- 2016
team <- read_excel(path=paste0(path_head, year, path_tail), sheet=1)
game <- read_excel(path=paste0(path_head, year, path_tail), sheet=2)
player <- read_excel(path=paste0(path_head, year, path_tail), sheet=3)
team_pitcher <- read_excel(path=paste0(path_head, year, path_tail), sheet=4)
team_hitter <- read_excel(path=paste0(path_head, year, path_tail), sheet=5)
pitcher <- read_excel(path=paste0(path_head, year, path_tail), sheet=6)
hitter <- read_excel(path=paste0(path_head, year, path_tail), sheet=7)
player_register <- read_excel(path=paste0(path_head, year, path_tail), sheet=8)
team <- cbind(year=2016)
team <- read_excel(path=path, sheet=1)
team <- cbind(team, year=2016)
path_head <- "../차철성/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.xlsx)_시즌별 구분/2020빅콘테스트_스포츠투아이_제공데이터_"
path_tail <- ".xlsx"
team <- c()
game <- c()
player <- c()
team_pitcher <- c()
team_hitter <- c()
pitcher <- c()
hitter <- c()
player_register <- c()
for (year in (2016:2020)) {
path <- paste0(path_head, year, path_tail)
team_temp <- read_excel(path=path, sheet=1)
team_temp <- cbind(team, year=year)
game_temp <- read_excel(path=path, sheet=2)
player_temp <- read_excel(path=path, sheet=3)
team_pitcher_temp <- read_excel(path=path, sheet=4)
team_hitter_temp <- read_excel(path=path, sheet=5)
pitcher_temp <- read_excel(path=path, sheet=6)
hitter_temp <- read_excel(path=path, sheet=7)
player_register_temp <- read_excel(path=path, sheet=8)
team <- rbind(team, team_temp)
game <- rbind(game, game_temp)
player <- rbind(player, player_temp)
team_pitcher <- rbind(team_pitcher, team_pitcher_temp)
team_hitter <- rbind(team_hitter, team_hitter_temp)
pitcher <- rbind(pitcher, pitcher_temp)
hitter <- rbind(hitter, hitter_temp)
player_register <- rbind(player_register, player_register_temp)
}
team_temp <- read_excel(path=path, sheet=1)
team_temp <- cbind(team, year=year)
View(team_temp)
team_temp <- read_excel(path=path, sheet=1)
team_temp <- cbind(team_temp, year=year)
library(readxl)
#### 시즌별 엑셀 데이터 가져오기
#[참고] path 샘플은 이것: "../차철성/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.xlsx)_시즌별 구분/2020빅콘테스트_스포츠투아이_제공데이터_2016.xlsx"
path_head <- "../차철성/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.xlsx)_시즌별 구분/2020빅콘테스트_스포츠투아이_제공데이터_"
path_tail <- ".xlsx"
team <- c()
game <- c()
player <- c()
team_pitcher <- c()
team_hitter <- c()
pitcher <- c()
hitter <- c()
player_register <- c()
for (year in (2016:2020)) {
path <- paste0(path_head, year, path_tail)
team_temp <- read_excel(path=path, sheet=1)
team_temp <- cbind(team_temp, year=year)
game_temp <- read_excel(path=path, sheet=2)
player_temp <- read_excel(path=path, sheet=3)
team_pitcher_temp <- read_excel(path=path, sheet=4)
team_hitter_temp <- read_excel(path=path, sheet=5)
pitcher_temp <- read_excel(path=path, sheet=6)
hitter_temp <- read_excel(path=path, sheet=7)
player_register_temp <- read_excel(path=path, sheet=8)
team <- rbind(team, team_temp)
game <- rbind(game, game_temp)
player <- rbind(player, player_temp)
team_pitcher <- rbind(team_pitcher, team_pitcher_temp)
team_hitter <- rbind(team_hitter, team_hitter_temp)
pitcher <- rbind(pitcher, pitcher_temp)
hitter <- rbind(hitter, hitter_temp)
player_register <- rbind(player_register, player_register_temp)
}
View(test)
rm(test)
View(team)
View(team)
View(game)
View(game)
save(game)
save(game, game)
save(list(game, hitter), file=test)
save(game, file=test)
save(list(game, hitter), file=test.RData)
save(game, file=test.RData)
getwd()
rm(*temp)
save(game, file="test.RData")
kbo <-  list(team, game, player, team_pitcher, team_hitter, pitcher, hitter, player_register)
# load 함수로 불러서 쓸 수 있음 load(file="파일경로/kbo.RData")
kbo$team
# load 함수로 불러서 쓸 수 있음 load(file="파일경로/kbo.RData")
kbo[[team]]
# load 함수로 불러서 쓸 수 있음 load(file="파일경로/kbo.RData")
kbo[team]
# 데이터를 하나의 리스트로 묶어서 저장
kbo <-  list(team, game, player, team_pitcher, team_hitter, pitcher, hitter, player_register)
kbo
kbo$team
kbo$player
team
kbo$player
kbo[[1]]
kbo[1]
unlist(kbo$team)
save(kbo, file="kbo.RData")
