head(data)
# 데이터 불러오기
data <- read.csv("../DATA_MART(수정하지마세요)/data_mart_final_201814.csv")
getwd()
# 데이터 불러오기
data <- read.csv("../DATA_MART (수정하지마세요)/data_mart_final_2001814.csv")
# 데이터 불러오기
data <- read.csv("../DATA_MART(수정하지마세요)/data_mart_final_2001814.csv")
# 데이터 불러오기
data <- read.csv("data_mart_final_2001814.csv_pointer")
head(data)
getwd()
dir()
# 데이터 불러오기
data <- read.csv("data_mart_final_2001814.csv.lnk")
dir()
# 데이터 불러오기
data <- read.csv("data_mart_final_200814.csv.lnk")
head(data)
# 데이터 불러오기
data <- read.csv("data_mart_final_200814.csv")
dir()
read.csv("data_mart_final_200814.csv.lnk")
# 데이터 불러오기
data <- read.csv("data_mart_final_200814.csv.lnk", skipNul = TRUE, stringsAsFactors = FALSE)
head(data)
data <- read.csv(file = "data_mart_final_200814.csv")
head(data)
str(data)
library(ggplot2)
data %>% group_by(T_ID) %>% summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) ) %>%  head()
library(dplyr)
data %>% group_by(T_ID) %>% summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) ) %>%  head()
stat_by_Team <- data %>% group_by(T_ID) %>% summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) ) %>%  head()
stars(stat_by_Team)
stars(stat_by_Team, key.loc = c(7,2))
stars(stat_by_Team, key.loc = c(7,2))
data[c("P", "D", "B", "C", "S")]
stars(data[c("P", "D", "B", "C", "S")], key.loc = c(7,2))
stat_by_Team <- data %>% group_by(T_ID) %>% summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) )
stars(stat_by_Team, key.loc = c(7,2))
stars(stat_all, key.loc = c(7,2))
stat_all
stat_all <- data %>% summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) )
stars(stat_all, key.loc = c(7,2))
stat_all
stars(stat_all)
head(stat_by_Team)
stat_by_Team
stars(stat_by_Team, key.loc = c(7,2))
stat_all
op <- par(no.readonly = TRUE)
par(mfrow=c(2,2))
stars(stat_by_Team, key.loc = c(7,2))
op <- par(no.readonly = TRUE)
op <- par(no.readonly = TRUE)
par(mfrow=c(2,2))
stars(stat_by_Team, key.loc = c(7,2))
title(main = "Star Plot")
stars(stat_by_Team, draw.segments = TRUE, key.loc = c(7,2))
title(main = "Segment Plot")
stars(stat_by_Team, location = c(0,0), key.loc = c(0,0))
stars(stat_by_Team, key.loc = c(7,2), scale = TRUE)
stars(stat_by_Team, key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot")
stars(stat_by_Team, draw.segments = TRUE, key.loc = c(7,2), scale = FALSE)
title(main = "Segment Plot")
stars(stat_by_Team, location = c(0,0), key.loc = c(0,0), scale = FALSE)
title(main = "Spider Plot")
rownames(stat_by_Team) <- stat_by_Team$T_ID
head(stat_by_Team)
stat_by_Team <- as.data.frame(stat_by_Team)
rownames(stat_by_Team) <- stat_by_Team$T_ID
stat_by_Team <- stat_by_Team[-T_ID]
stat_by_Team <- stat_by_Team[-"T_ID"]
stat_by_Team["T_ID"]
stat_by_Team[[-"T_ID"]]
head(stat_by_Team)
stat_by_Team <- data %>% group_by(T_ID) %>% summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) )
head(stat_by_Team)
stat_by_Team <- as.data.frame(stat_by_Team)
rownames(stat_by_Team) <- stat_by_Team$T_ID
head(stat_by_Team)
op <- par(no.readonly = TRUE)
par(mfrow=c(2,2))
stars(stat_by_Team, key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot")
stat_by_Team <- stat_by_Team[-1]
head(stat_by_Team)
op <- par(no.readonly = TRUE)
par(mfrow=c(2,2))
stars(stat_by_Team, key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot")
stars(stat_by_Team, draw.segments = TRUE, key.loc = c(7,2), scale = FALSE)
title(main = "Segment Plot")
stars(stat_by_Team, location = c(0,0), key.loc = c(0,0), scale = FALSE)
title(main = "Spider Plot")
stat_all <- data %>% summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) )
op <- par(no.readonly = TRUE)
par(mfrow=c(2,1))
stars(stat_by_Team, key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot")
stars(stat_by_Team, location = c(0,0), key.loc = c(0,0), scale = FALSE)
stat_all <- data %>% summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) )
rownames(stat_all) <- "ALL"
stat_all <- stat_all[-1]
stat_all
stat_all <- data %>% summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) )
rownames(stat_all) <- "ALL"
stat_all
stat_by_Team <- rbind(stat_by_Team, stat_all)
stat_by_Team
op <- par(no.readonly = TRUE)
par(mfrow=c(2,2))
stars(stat_by_Team, key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot, 팀별 전기간")
stars(stat_by_Team, location = c(0,0), key.loc = c(0,0), scale = FALSE)
title(main = "Spider Plot, 팀별 전기간")
stars(stat_all)
op <- par(no.readonly = TRUE)
par(mfrow=c(2,2))
stars(stat_by_Team, key.loc = c(7,2), scale = TRUE)
title(main = "Star Plot, 팀별 전기간")
stars(stat_by_Team, location = c(0,0), key.loc = c(0,0), scale = TRUE)
title(main = "Spider Plot, 팀별 전기간")
op <- par(no.readonly = TRUE)
par(mfrow=c(2,2))
stars(stat_by_Team, key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot, 팀별 전기간")
stars(stat_by_Team, location = c(0,0), key.loc = c(0,0), scale = FALSE)
title(main = "Spider Plot, 팀별 전기간")
# 시즌별로 지표 정리
stat_by_YEAR <- data %>% group_by(YEAR) %>%
summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) )
stat_by_YEAR <- as.data.frame(stat_by_YEAR)
rownames(stat_by_YEAR) <- stat_by_YEAR$YEAR
stat_by_YEAR
stat_by_YEAR <- stat_by_YEAR[-1]
stat_by_YEAR
stars(stat_by_YEAR, key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot, 시즌별 전체팀")
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = FALSE)
title(main = "Spider Plot, 시즌별 전체팀")
stat_by_T_Y %>% data %>% group_by(T_ID, YEAR) %>%
summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) )
# 팀별, 시즌별로 지표 정리
stat_by_T_Y <-  data %>% group_by(T_ID, YEAR) %>%
summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) )
stat_by_T_Y
rownames(stat_by_T_Y) <- paste(stat_by_T_Y$T_ID, stat_by_T_Y$YEAR, sep="_")
stat_by_T_Y <- as.data.frame(stat_by_T_Y)
rownames(stat_by_T_Y) <- paste(stat_by_T_Y$T_ID, stat_by_T_Y$YEAR, sep="_")
head(stat_by_T_Y)
############################################
# 각팀의 연도별 방사형 챠트, scale=TRUE
par(mfrow=c(1, 2))
par(mfrow=c(1, 2))
stars(stat_by_T_Y, key.loc = c(7,2), scale = TRUE)
stat_by_T_Y[c("P", "D", "B", "C", "S")]
par(mfrow=c(1, 2))
stars(stat_by_T_Y[c("P", "D", "B", "C", "S")], key.loc = c(7,2), scale = TRUE)
title(main = "Star Plot, 팀별 각 시즌")
stars(stat_by_T_Y[c("P", "D", "B", "C", "S")], location = c(0,0), key.loc = c(0,0), scale = TRUE)
title(main = "Spider Plot, 팀별 각 시즌")
stars(stat_by_T_Y[T_ID=="OB", c("P", "D", "B", "C", "S")], location = c(0,0), key.loc = c(0,0), scale = TRUE)
title(main = "Spider Plot, 팀별 각 시즌")
stat_by_T_Y
stars(stat_by_T_Y[stat_by_T_Y$T_ID=="OB", c("P", "D", "B", "C", "S")], location = c(0,0), key.loc = c(0,0), scale = TRUE)
title(main = "Spider Plot, 팀별 각 시즌")
stars(stat_by_T_Y[stat_by_T_Y$T_ID=="OB",c("P", "D", "B", "C", "S")], key.loc = c(7,2), scale = TRUE)
title(main = "Star Plot, OB팀 각 시즌")
par(mfrow=c(1, 2))
stars(stat_by_T_Y[stat_by_T_Y$T_ID=="OB",c("P", "D", "B", "C", "S")], key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot, OB팀 각 시즌")
stars(stat_by_T_Y[stat_by_T_Y$T_ID=="OB", c("P", "D", "B", "C", "S")], location = c(0,0), key.loc = c(0,0), scale = FALSE)
title(main = "Spider Plot, 팀별 각 시즌")
team_stars <- function(T_ID){
par(mfrow=c(1, 2))
stars(stat_by_T_Y[stat_by_T_Y$T_ID==T_ID,c("P", "D", "B", "C", "S")], key.loc = c(7,2), scale = FALSE)
title(main = paste("Star Plot,", T_ID, "팀 각 시즌"))
stars(stat_by_T_Y[stat_by_T_Y$T_ID==T_ID, c("P", "D", "B", "C", "S")], location = c(0,0), key.loc = c(0,0), scale = FALSE)
title(main = paste("Spider Plot,", T_ID, "팀 각 시즌"))
}
team_stars("HH")
team_stars("LT")
team_spider <- function(T_ID){
stars(stat_by_T_Y[stat_by_T_Y$T_ID==T_ID, c("P", "D", "B", "C", "S")], location = c(0,0), key.loc = c(0,0), scale = FALSE)
title(main = paste("Spider Plot,", T_ID, "팀 각 시즌"))
}
team_spider("NC")
par()
par(c(1,1))
team_spider("NC")
par(c(1,1))
team_spider("NC")
team_list
par(c(4,3))
for(T_ID in team_list$T_ID){
team_spider("NC")
}
par(c(4,3))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
}
par(mfrow=c(4,3))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
}
# star챠트 함수를 정의함
team_stars <- function(T_ID){
stars(stat_by_T_Y[stat_by_T_Y$T_ID==T_ID, c("P", "D", "B", "C", "S")], location = c(0,0), key.loc = c(0,0), scale = FALSE)
title(main = paste("Spider Plot,", T_ID, "팀 각 시즌"))
}
team_stars("HH")
team_stars("LT")
# star챠트 함수를 정의함
team_stars <- function(T_ID){
stars(stat_by_T_Y[stat_by_T_Y$T_ID==T_ID, c("P", "D", "B", "C", "S")], location = c(0,0), key.loc = c(0,0), scale = FALSE)
title(main = paste("Spider Plot,", T_ID, "팀 각 시즌"))
}
team_stars("HH")
stat_by_T_Y[stat_by_T_Y$T_ID==T_ID, c("P", "D", "B", "C", "S")]
par(mfrow=c(4,3))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
}
team_stars <- function(T_ID){
stars(stat_by_T_Y[stat_by_T_Y$T_ID==T_ID, c("P", "D", "B", "C", "S")], location = c(0,0), key.loc = c(0,0), scale = FALSE)
title(main = paste("Spider Plot,", T_ID, "팀 각 시즌"))
}
team_stars("HH")
team_stars("LT")
team_stars("OB")
team_stars
rm(team_stars)
# star챠트 함수를 정의함
team_stars <- function(T_ID){
stars(stat_by_T_Y[stat_by_T_Y$T_ID==T_ID, c("P", "D", "B", "C", "S")], location = c(0,0), key.loc = c(0,0), scale = FALSE)
title(main = paste("Spider Plot,", T_ID, "팀 각 시즌"))
}
team_stars("HH")
# star챠트 함수를 정의함
team_stars <- function(T_ID){
stars(stat_by_T_Y[stat_by_T_Y$T_ID==T_ID, c("P", "D", "B", "C", "S")], key.loc = c(0,0), scale = FALSE)
title(main = paste("Spider Plot,", T_ID, "팀 각 시즌"))
}
team_stars("HH")
team_stars("LT")
team_stars("OB")
length(2016:2020)
team_spider <- function(T_ID){
stars(stat_by_T_Y[stat_by_T_Y$T_ID==T_ID, c("P", "D", "B", "C", "S")],
location = c(0,0), key.loc = c(0,0), scale = FALSE,
col.lines = c(1:length(2016:2020)))
title(main = paste("Spider Plot,", T_ID, "팀 각 시즌"))
}
par(mfrow=c(4,3))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
}
stat_by_Team
stat_by_Team <- data %>% group_by(T_ID) %>% summarise(P=mean(P), D=mean(D), B=mean(B), C=mean(C), S=mean(S) )
head(stat_by_Team)
stat_by_Team <- as.data.frame(stat_by_Team)
rownames(stat_by_Team) <- stat_by_Team$T_ID
stat_by_Team <- stat_by_Team[-1]
head(stat_by_Team)
stat_by_YEAR
stars(stat_by_Team, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:10))
title(main = "Spider Plot, 팀별 전기간")
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:5)))
title(main = "Spider Plot, 시즌별 전체팀")
# 연도별
# stars 챠트
stars(stat_by_YEAR, key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot, 시즌별 전체팀")
# spider 챠트
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:5)))
title(main = "Spider Plot, 시즌별 전체팀")
# spider 챠트
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:5))
title(main = "Spider Plot, 시즌별 전체팀")
legend(x=1, y=1, legend = stat_by_YEAR$YEAR, lty = 2, col = c(1:5), lwd = 2)
# spider 챠트
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:5))
title(main = "Spider Plot, 시즌별 전체팀")
legend(x=1, y=1, legend = stat_by_YEAR$YEAR, lty = 2, col = c(1:5), lwd = 2)
legend(x=1, y=1, legend = names(stat_by_YEAR), lty = 2, col = c(1:5), lwd = 2)
legend(x=1, y=1, legend = rownames(stat_by_YEAR), lty = 2, col = c(1:5), lwd = 2)
# spider 챠트
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = TRUE, col.lines = c(1:5))
title(main = "Spider Plot, 시즌별 전체팀")
legend(x=1, y=1, legend = rownames(stat_by_YEAR), lty = 2, col = c(1:5), lwd = 2)
# spider 챠트
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:5))
title(main = "Spider Plot, 시즌별 전체팀")
legend(x=1, y=1, legend = rownames(stat_by_YEAR), lty = 2, col = c(1:5), lwd = 2)
###############################
# 팀별, 년도별 방사형 챠트
op <- par(no.readonly = TRUE)
par(mfrow=c(2,2))
#######################
# 팀별
# stars 챠트
stars(stat_by_Team, key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot, 팀별 전기간")
# spider 챠트
stars(stat_by_Team, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:10))
title(main = "Spider Plot, 팀별 전기간")
legend(x=1, y=1, legend = rownames(stat_by_Team))
legend(x=1, y=1, legend = rownames(stat_by_Team), lty = 2, col=c(1:10), lwd = 2)
legend(x=5, y=5, legend = rownames(stat_by_Team), lty = 2, col=c(1:10), lwd = 2)
system.time()
system.time(team_spider("OB"))
par(op)
par(mfrow=c(4,3))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
}
par(mfrow=c(2,5))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
}
op <- par(no.readonly = TRUE)
par(bg =)
par(bg = "white")
split.screen(fig = c(2,1))
split.screen(c(1,2), screen = 2)
screen(n=3)
hist(car$speed)
hist(cars$speed)
screen(1)
plot(cars, main = " scatter plot of cars data by split.screen")
screen(n=1)
plot(cars, main = " scatter plot of cars data by split.screen")
screen(n=3)
plot(cars, main = " scatter plot of cars data by split.screen")
screen(4)
hist(cars$dist)
screen(2)
screen(1)
par(op)
op
op <-  par(no.readonly = TRUE)
op
par(bg="white")
split.screen(c(2,1))
close.screen(all = TRUE)
close.screen(all.screens  = TRUE)
par(op)
split.screen(figs = c(2,1))
split.screen(figs = c(1,2), screen = 2)
screen(3)
hist(cars$speed)
screen(1)
plot(cars, main = "scatter")
screen(4)
hist(cars$dist)
erase.screen(n=1)
screen(1)
plot(cars, main = "scatter plot", pch= 19, col = "blue")
close.screen(all=TRUE)
par(op)
head(cars)
m <- matrix(c(1, 1, 2, 3), ncol = 2, byrow = TRUE)
m
layout(mat = m)
plot(cars, main="layout test", pch = 19, col =4)
hist(cars$speed)
hist(cars$dist)
screen(1)
split.screen(figs = c(2, 1))
split.screen(figs = c(1,2), screen = 2)
split.screen(figs = c(1,2), screen = 1)
screen(5)
hist(cars$speed)
screen(6)
hist(cars$dis)
screen(3)
stars(cars)
screen(4)
stars(cars, locations = c(0,0))
par(op)
close.screen(all = TRUE)
par(mfrow=c(2,2))
par(fig=c(0, 1, 0.5, 1))
plot(cars, main= "scatter plot of cars data by fig")
par(fig=c(0, 0.5, 0, 0.5), new = TRUE)
hist(cars$speed, main = "histogram by fig")
par(fig = c(0.5, 1, 0, 0.5), new = TRUE)
hist(cars$dis, main = "hist")
par(op)
par(mfrow=c(2,2))
plot(1:10, type="l", main="plot")
par(new=FALSE)
plot(10:1, type="s", main="step")
par(new=FALSE)
par(new=TRUE)
par(new=FALSE)
plot(1:10, type="s", main = "step")
par(new=TRUE)
plot(10:1, type = "S", main = "Step")
x <- rnorm(10)
plot(x)
par(new=TRUE)
hist(x)
par(op)
par(mfrow=c(3,3))
plot(10:1)
plot(1:10)
plot(1:10, type = "l")
par(new=TRUE)
plot(10:1, type = "s")
plot(new=TRUE)
par(new=TRUE)
hist(cars$dis)
par(mfrow= c(2,3), bty= "l")
plot(0:6)
plot(1:10, bty="l")
plot(1:10, type="s")
plot(1:1o, bty="c")
plot(1:10, bty="c")
plot(1:10, bty="7")
plot(1:10, bty="u")
plot(1:10, bty="o")
plot(1:10, bty="1")
plot(1:10, bty="l")
plot(1:10, bty="n")
plot(1:10, bty="]")
plot(1:10, pty="s")
par(mfrow=c(2,1))
plot(1:10, bty="s")
plot(1:10, pty="s")
plot(1:10, pty="m")
plot(1:10, pty="s")
par(op)
theta <- seq(-pi, pi, legnth=30)
theta <- seq(-pi, pi, length=30)
x <- cos(theta)
y <- sin(theta)
par(mfrow=c(1, 2))
plot(x, y)
plot(x, y, pty="s")
plot(x, y, pty="m")
plot(x, y, pty="s")
par(pty="s", bty="7")
plot(x, y)
plto(x, y, pty="s")
plot(x, y, pty="s")
plot(x, y, pty="m")
plot(x, y, pty="m")
plot(x, y, type="l")
theta <- seq(-pi, pi, length=10)
x <- cos(theta)
y <- sin(theta)
plot(x, y)
plot(x, y, type="l")
par(mfrow=c(2,3), type = "n")
par(op)
par(mfrow=c(2,3), type="n")
par(mfrow=c(2,3))
plot(0:6, 0:6, main = "default")
plot(0:6, 0:6, type="b", main = \"b\")
plot(0:6, 0:6, type="b", main = "\"b\"")
plot(0:6, 0:6, type="c", main = "\"c\"")
plot(0:6, 0:6, type="o", main = "\"o\"")
plot(0:6, 0:6, type="s", main = "\"s\"")
plot(0:6, 0:6, type="S", main = "\"S\"")
plot(0:6, 0:6, pch = 16)
plot(0:6, 0:6, pch = 19)
plot(0:6, 0:6, pch = 20)
par("bty")
par("pch")
par("lty")
par("type")
plot(1:10, type="n", xlab="", ylab="", main = "legend")
legend("bottomright", "(x,y)", pch =1, title = "bottomright")
legend("bottom", "(x,y)", pch =1, title = "bottom")
legend("bottomleft", "(x,y)", pch =1, title = "bottomleft")
legend("left", "(x,y)", pch =1, title = "left")
legend("right", "(x,y)", pch =1, title = "right")
legend("topright", "(x,y)", pch =1, title = "topright")
legend("topleft", "(x,y)", pch =1, title = "topleft")
legend("top", "(x,y)", pch =1, title = "top")
legend("center", "(x,y)", pch =1, title = "center")
legends <-  c("Legend1", "Legend2")
legend(x=3, y=8, legend = legends, pch=1:2, col = 1:2)
legend(x=7, y=8, legend = legends, pch=1:2, col = 1:2, lty = 1:2)
legend(3, 4, legend=legends, fill = 1:2)
legend(7, 3, legend=legends, fill = 1:2, density = 30)
legend(7, 5, legend=legends, fill = 1:2, density = 70)
legend(locator(1), legend="locator", fill = 1)
locator(1)
locator(2)
locator(3)
locator(3)
locator(n=10, type="l")
locator(n=10, type="l")
locator(n=10, type="l")
x <- 0:4
set.seed(7)
y <- dbinom(x, size=4, prob = 0.5)
y
?dbinom
choose(3, 2)
choose(3, 1)
choose(5, 2)
choose(4, 0)
n <- 2000
k <- seq(0, n, by = 20)
plot (k, dbinom(k, n, pi/10, log = TRUE), type = "l", ylab = "log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
