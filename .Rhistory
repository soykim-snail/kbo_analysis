stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:5)))
title(main = "Spider Plot, 시즌별 전체팀")
# 연도별
# stars 챠트
stars(stat_by_YEAR, key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot, 시즌별 전체팀")
# spider 챠트
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:5)))
title(main = "Spider Plot, 시즌별 전체팀")
# spider 챠트
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:5))
title(main = "Spider Plot, 시즌별 전체팀")
legend(x=1, y=1, legend = stat_by_YEAR$YEAR, lty = 2, col = c(1:5), lwd = 2)
# spider 챠트
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:5))
title(main = "Spider Plot, 시즌별 전체팀")
legend(x=1, y=1, legend = stat_by_YEAR$YEAR, lty = 2, col = c(1:5), lwd = 2)
legend(x=1, y=1, legend = names(stat_by_YEAR), lty = 2, col = c(1:5), lwd = 2)
legend(x=1, y=1, legend = rownames(stat_by_YEAR), lty = 2, col = c(1:5), lwd = 2)
# spider 챠트
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = TRUE, col.lines = c(1:5))
title(main = "Spider Plot, 시즌별 전체팀")
legend(x=1, y=1, legend = rownames(stat_by_YEAR), lty = 2, col = c(1:5), lwd = 2)
# spider 챠트
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:5))
title(main = "Spider Plot, 시즌별 전체팀")
legend(x=1, y=1, legend = rownames(stat_by_YEAR), lty = 2, col = c(1:5), lwd = 2)
###############################
# 팀별, 년도별 방사형 챠트
op <- par(no.readonly = TRUE)
par(mfrow=c(2,2))
#######################
# 팀별
# stars 챠트
stars(stat_by_Team, key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot, 팀별 전기간")
# spider 챠트
stars(stat_by_Team, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:10))
title(main = "Spider Plot, 팀별 전기간")
legend(x=1, y=1, legend = rownames(stat_by_Team))
legend(x=1, y=1, legend = rownames(stat_by_Team), lty = 2, col=c(1:10), lwd = 2)
legend(x=5, y=5, legend = rownames(stat_by_Team), lty = 2, col=c(1:10), lwd = 2)
system.time()
system.time(team_spider("OB"))
par(op)
par(mfrow=c(4,3))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
}
par(mfrow=c(2,5))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
}
op <- par(no.readonly = TRUE)
par(bg =)
par(bg = "white")
split.screen(fig = c(2,1))
split.screen(c(1,2), screen = 2)
screen(n=3)
hist(car$speed)
hist(cars$speed)
screen(1)
plot(cars, main = " scatter plot of cars data by split.screen")
screen(n=1)
plot(cars, main = " scatter plot of cars data by split.screen")
screen(n=3)
plot(cars, main = " scatter plot of cars data by split.screen")
screen(4)
hist(cars$dist)
screen(2)
screen(1)
par(op)
op
op <-  par(no.readonly = TRUE)
op
par(bg="white")
split.screen(c(2,1))
close.screen(all = TRUE)
close.screen(all.screens  = TRUE)
par(op)
split.screen(figs = c(2,1))
split.screen(figs = c(1,2), screen = 2)
screen(3)
hist(cars$speed)
screen(1)
plot(cars, main = "scatter")
screen(4)
hist(cars$dist)
erase.screen(n=1)
screen(1)
plot(cars, main = "scatter plot", pch= 19, col = "blue")
close.screen(all=TRUE)
par(op)
head(cars)
m <- matrix(c(1, 1, 2, 3), ncol = 2, byrow = TRUE)
m
layout(mat = m)
plot(cars, main="layout test", pch = 19, col =4)
hist(cars$speed)
hist(cars$dist)
screen(1)
split.screen(figs = c(2, 1))
split.screen(figs = c(1,2), screen = 2)
split.screen(figs = c(1,2), screen = 1)
screen(5)
hist(cars$speed)
screen(6)
hist(cars$dis)
screen(3)
stars(cars)
screen(4)
stars(cars, locations = c(0,0))
par(op)
close.screen(all = TRUE)
par(mfrow=c(2,2))
par(fig=c(0, 1, 0.5, 1))
plot(cars, main= "scatter plot of cars data by fig")
par(fig=c(0, 0.5, 0, 0.5), new = TRUE)
hist(cars$speed, main = "histogram by fig")
par(fig = c(0.5, 1, 0, 0.5), new = TRUE)
hist(cars$dis, main = "hist")
par(op)
par(mfrow=c(2,2))
plot(1:10, type="l", main="plot")
par(new=FALSE)
plot(10:1, type="s", main="step")
par(new=FALSE)
par(new=TRUE)
par(new=FALSE)
plot(1:10, type="s", main = "step")
par(new=TRUE)
plot(10:1, type = "S", main = "Step")
x <- rnorm(10)
plot(x)
par(new=TRUE)
hist(x)
par(op)
par(mfrow=c(3,3))
plot(10:1)
plot(1:10)
plot(1:10, type = "l")
par(new=TRUE)
plot(10:1, type = "s")
plot(new=TRUE)
par(new=TRUE)
hist(cars$dis)
par(mfrow= c(2,3), bty= "l")
plot(0:6)
plot(1:10, bty="l")
plot(1:10, type="s")
plot(1:1o, bty="c")
plot(1:10, bty="c")
plot(1:10, bty="7")
plot(1:10, bty="u")
plot(1:10, bty="o")
plot(1:10, bty="1")
plot(1:10, bty="l")
plot(1:10, bty="n")
plot(1:10, bty="]")
plot(1:10, pty="s")
par(mfrow=c(2,1))
plot(1:10, bty="s")
plot(1:10, pty="s")
plot(1:10, pty="m")
plot(1:10, pty="s")
par(op)
theta <- seq(-pi, pi, legnth=30)
theta <- seq(-pi, pi, length=30)
x <- cos(theta)
y <- sin(theta)
par(mfrow=c(1, 2))
plot(x, y)
plot(x, y, pty="s")
plot(x, y, pty="m")
plot(x, y, pty="s")
par(pty="s", bty="7")
plot(x, y)
plto(x, y, pty="s")
plot(x, y, pty="s")
plot(x, y, pty="m")
plot(x, y, pty="m")
plot(x, y, type="l")
theta <- seq(-pi, pi, length=10)
x <- cos(theta)
y <- sin(theta)
plot(x, y)
plot(x, y, type="l")
par(mfrow=c(2,3), type = "n")
par(op)
par(mfrow=c(2,3), type="n")
par(mfrow=c(2,3))
plot(0:6, 0:6, main = "default")
plot(0:6, 0:6, type="b", main = \"b\")
plot(0:6, 0:6, type="b", main = "\"b\"")
plot(0:6, 0:6, type="c", main = "\"c\"")
plot(0:6, 0:6, type="o", main = "\"o\"")
plot(0:6, 0:6, type="s", main = "\"s\"")
plot(0:6, 0:6, type="S", main = "\"S\"")
plot(0:6, 0:6, pch = 16)
plot(0:6, 0:6, pch = 19)
plot(0:6, 0:6, pch = 20)
par("bty")
par("pch")
par("lty")
par("type")
plot(1:10, type="n", xlab="", ylab="", main = "legend")
legend("bottomright", "(x,y)", pch =1, title = "bottomright")
legend("bottom", "(x,y)", pch =1, title = "bottom")
legend("bottomleft", "(x,y)", pch =1, title = "bottomleft")
legend("left", "(x,y)", pch =1, title = "left")
legend("right", "(x,y)", pch =1, title = "right")
legend("topright", "(x,y)", pch =1, title = "topright")
legend("topleft", "(x,y)", pch =1, title = "topleft")
legend("top", "(x,y)", pch =1, title = "top")
legend("center", "(x,y)", pch =1, title = "center")
legends <-  c("Legend1", "Legend2")
legend(x=3, y=8, legend = legends, pch=1:2, col = 1:2)
legend(x=7, y=8, legend = legends, pch=1:2, col = 1:2, lty = 1:2)
legend(3, 4, legend=legends, fill = 1:2)
legend(7, 3, legend=legends, fill = 1:2, density = 30)
legend(7, 5, legend=legends, fill = 1:2, density = 70)
legend(locator(1), legend="locator", fill = 1)
locator(1)
locator(2)
locator(3)
locator(3)
locator(n=10, type="l")
locator(n=10, type="l")
locator(n=10, type="l")
x <- 0:4
set.seed(7)
y <- dbinom(x, size=4, prob = 0.5)
y
?dbinom
choose(3, 2)
choose(3, 1)
choose(5, 2)
choose(4, 0)
n <- 2000
k <- seq(0, n, by = 20)
plot (k, dbinom(k, n, pi/10, log = TRUE), type = "l", ylab = "log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
op <-  par(no.readonly = TRUE)
x <- 0:4
set.seed(7)
(y <- dbinom(x, size=4, prob = 0.5))
(z <- pbinom(x, size=4, prob = 0.5))
c(1/16, 4/16, 6/16, 4/16, 1/16)
(q <- qbinom(x, size=4, prob = 0.5))
(q <- qbinom(seq(0, 1, by=0.2), size=4, prob = 0.5))
(r <- rbinom(10, size = 4, prob = 0.5))
par(oma=c(0, 0, 2, 0), mfrow=c(2,2))
plot(x, y, type="h")
plot(x, z, type = "l", ylim = c(0, 1))
plot(x, q, type="h", xlim = c(1, 3))
plot(q, type="h", xlim = c(1, 3))
plot(r, type="o")
title(main = "binomial")
title(main="binomial", line = 0, outer = T)
title(main="binomial", line = 1, outer = T)
title(main="binomial", line = 2, outer = T)
plot(x, y, type="h", ylim=c(0,1), btype='l')
plot(x, y, type="h", ylim=c(0,1), bty='l')
plot(x, y, type="h", ylim=c(0,1), bty='7')
plot(x, y, type="h", ylim=c(0,1), bty='o')
plot(x, y, type="h", ylim=c(0,max(y)), bty='o')
par(mfrow=c(2,2), oma=c(0,0,2,0), cex=1)
plot(0:6, 0:6, type="n", main="cex in text")
text(1:3, 1:3, labels=LETTERS[1:3], cex=1:3)
text(x=4:6, y=4:6, labels=LETTERS[1:3], cex=1:3)
plot(0:6, 0:6, type = "n", cex=2, main = "cex in plot")
text(1:3, 1:3, labels=LETTERS[1:3], cex=1:3)
plot(0:6, 0:6, type = "n", main = "ces in par")
text(1:3, 1:3, labels=LETTERS[1:3], cex=1:3)
plot(0:6, 0:6, type = "n", main = "ces in par")
text(1:3, 1:3, labels=c("가","나", "다"), cex=1:3)
points(3:5, 1:3, pch=1:3, cex=1:3)
title(main = "cex", line=0, outer=T)
par(mfrow=c(2,5))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
}
par(no.readonly = TRUE)
op <- par(no.readonly = TRUE)
par(mfrow=c(2,5))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
box(which = "outer", lty = 1, col="red")
box(which = "inner", lty = 1, col="blue")
box(which = "figure", lty = 1, col="pink")
}
op <- par(no.readonly = TRUE)
par(mfrow=c(2,5))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
box(which = "outer", lty = 1, col="red")
box(which = "inner", lty = 1, col="blue")
box(which = "figure", lty = 1, col="pink")
box(which = "plot", lty = 1, col="black")
}
mar()
op <- par(no.readonly = TRUE)
par(mfrow=c(5,2))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
box(which = "outer", lty = 1, col="red")
box(which = "inner", lty = 1, col="blue")
box(which = "figure", lty = 1, col="pink")
box(which = "plot", lty = 1, col="black")
}
op <- par(no.readonly = TRUE)
par(mfrow=c(2,5), mar=c(4,4,4,4))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
box(which = "outer", lty = 1, col="red")
box(which = "inner", lty = 1, col="blue")
box(which = "figure", lty = 1, col="pink")
box(which = "plot", lty = 1, col="black")
}
op <- par(no.readonly = TRUE)
par(mfrow=c(2,5), mar=c(4,4,4,4), oma=c(4,0,0,0))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
box(which = "outer", lty = 1, col="red")
box(which = "inner", lty = 1, col="blue")
box(which = "figure", lty = 1, col="pink")
box(which = "plot", lty = 1, col="black")
}
par(no.readonly = TRUE)
op <- par(no.readonly = TRUE)
par(mfrow=c(2,5))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
box(which = "outer", lty = 1, col="red")
box(which = "inner", lty = 1, col="blue")
box(which = "figure", lty = 1, col="pink")
box(which = "plot", lty = 1, col="black")
}
par(mfrow=c(2,5), oma=c(4, 1, 1, 1))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
box(which = "outer", lty = 1, col="red")
box(which = "inner", lty = 1, col="blue")
box(which = "figure", lty = 1, col="pink")
box(which = "plot", lty = 1, col="black")
}
1 == 1.0
as.integer(1) == 1.0
as.logical(0)
as.logical(-1)
!as.logical(0)
!0
!-1
!1
!"FALSE"
as.logical("FALSE")
as.logical("a")
as.logical("F")
as.logical("False")
as.logical("false")
as.logical("f")
as.logical("True")
TREU | "python"
TRUE | FALSE
TRUE & TRUE
TRUE & "python"
person <- c("james", 1, 1.1, TRUE)
person
person <- c(1, 1.1, TRUE)
person
c(1, TRUE)
c("1", TRUE)
c(1.1, TRUE)
list()
vector(mode="integer", length=10)
factor(x=character(5), levels=LETTERS[1:5])
character(5)
seq(10)
seq(5:10)
5:10
seq(5, 10)
seq(2:4)
seq(c(2,3,4))
seq(c("a", "b", "c"))
range(c(1, 2, 4, 7))
seq(2, 10, by=2)
seq(2, 9, by =2)
seq(2, 10, by = 2, each = 2)
seq(2, 10, by = 2, times = 2)
seq(2, 10, by = 2, time = 2)
seq(2, 10, each = 2)
seq(2, 10, time = 2)
seq(2, 10, times = 2)
?seq
seq(2, 10, length.out = 15)
print("a", "b", "c")
print(paste("a", "b", "c"))
}
print(paste("a", "b", "c"))
print(c("a", "c", "b"))
0 %in% q
5 %in% q
2 == q
2-q
5 !%in% q
!any(5 == q)
length(q)
## 데이터 정리 ..... P1, P2, .... S2를 정규화 없이
stat_general_by_T_Y <-  data %>% group_by(T_ID, YEAR) %>%
summarise(P1=mean(P1), P2=mean(P2), P3=mean(P3), P4=mean(P4),
D1=mean(D1), D2=mean(D2), D3=mean(D3),
B1=mean(B1), B2=mean(B2), B3=mean(B3), B4=mean(B4),
C1=mean(C1), C2=mean(C2), C3=mean(C3), C4=mean(C4),
S1=mean(S1), S2=mean(S2))
library(dplyr)
## 데이터 정리 ..... P1, P2, .... S2를 정규화 없이
stat_general_by_T_Y <-  data %>% group_by(T_ID, YEAR) %>%
summarise(P1=mean(P1), P2=mean(P2), P3=mean(P3), P4=mean(P4),
D1=mean(D1), D2=mean(D2), D3=mean(D3),
B1=mean(B1), B2=mean(B2), B3=mean(B3), B4=mean(B4),
C1=mean(C1), C2=mean(C2), C3=mean(C3), C4=mean(C4),
S1=mean(S1), S2=mean(S2))
stat_general_by_T_Y <- as.data.frame(stat_general_by_T_Y)
rownames(stat_general_by_T_Y) <- paste(stat_general_by_T_Y$T_ID, stat_general_by_T_Y$YEAR, sep="_")
head(stat_general_by_T_Y)
colnames(stat_general_by_T_Y)
colnames(stat_general_by_T_Y)[c(-1, -2)]
#### 기초 스탯에 대한 10개 구단의 시즌별 변동 챠트
## 챠트 함수를 정의
team_spider_general <- function(T_ID){
stars(stat_general_by_T_Y[stat_general_by_T_Y$T_ID==T_ID, colnames(stat_general_by_T_Y)[c(-1, -2)]],
location = c(0,0), key.loc = c(0,0), scale = FALSE,
col.lines = c(1:length(2016:2020)))
title(main = paste("General Spider Plot,", T_ID, "팀 각 시즌"))
}
op <- par(no.readonly = TRUE)
par(mfrow=c(2,5), oma=c(4, 1, 1, 1))
for(T_ID in team_list$T_ID){
team_spider_general(T_ID)
}
par(op)
#### 기초 스탯에 대한 10개 구단의 시즌별 변동 챠트
## 챠트 함수를 정의
team_spider_general <- function(T_ID){
stars(stat_general_by_T_Y[stat_general_by_T_Y$T_ID==T_ID, colnames(stat_general_by_T_Y)[c(-1, -2)]],
location = c(0,0), key.loc = c(0,0), scale = TRUE,
col.lines = c(1:length(2016:2020)))
title(main = paste("General Spider Plot,", T_ID, "팀 각 시즌"))
}
## 챠트 그리기
op <- par(no.readonly = TRUE)
par(mfrow=c(2,5), oma=c(4, 1, 1, 1))
for(T_ID in team_list$T_ID){
team_spider_general(T_ID)
}
par(op)
legend(1,1)
op <- par(no.readonly = TRUE)
par(mfrow=c(2,5), oma=c(4, 1, 1, 1))
for(T_ID in team_list$T_ID){
team_spider_general(T_ID)
}
legend(x=5, y=5, legend = rownames(stat_general_by_T_Y), lty = 2, col=c(1:10), lwd = 2)
col(1)
plot(1:10, col=c(1:10))
par(op)
par(mfraw=c(1,1))
par(mfrow=c(1,1))
plot(1:10, col=c(1:10))
plot(1:10, col=c(1:10), pch=19)
plot(1:10, col=c(1:5), pch=16)
plot(1:5, col=c(1:5), pch=16)
op <- par(no.readonly = TRUE)
par(mfrow=c(2,5), oma=c(4, 1, 1, 1))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
# box(which = "outer", lty = 1, col="red")
# box(which = "inner", lty = 1, col="blue")
# box(which = "figure", lty = 1, col="pink")
# box(which = "plot", lty = 1, col="black")
}
par(op)
#######################
# 연도별
# stars 챠트
stars(stat_by_YEAR, key.loc = c(7,2), scale = FALSE)
title(main = "Star Plot, 시즌별 전체팀")
# spider 챠트
stars(stat_by_YEAR, location = c(0,0), key.loc = c(0,0), scale = FALSE, col.lines = c(1:5))
title(main = "Spider Plot, 시즌별 전체팀")
legend(x=1, y=1, legend = rownames(stat_by_YEAR), lty = 2, col = c(1:5), lwd = 2)
data_norm_2 <- read.csv("data_norm_2.csv")
# spider 챠트 함수를 정의함
team_spider <- function(T_ID){
stars(stat_by_T_Y[stat_by_T_Y$T_ID==T_ID, c("P", "D", "B", "C", "S")],
location = c(0,0), key.loc = c(0,0), scale = TRUE,
col.lines = c(1:length(2016:2020)))
title(main = paste("Spider Plot,", T_ID, "팀 각 시즌"))
}
op <- par(no.readonly = TRUE)
par(mfrow=c(2,5), oma=c(4, 1, 1, 1))
for(T_ID in team_list$T_ID){
team_spider(T_ID)
# box(which = "outer", lty = 1, col="red")
# box(which = "inner", lty = 1, col="blue")
# box(which = "figure", lty = 1, col="pink")
# box(which = "plot", lty = 1, col="black")
}
par(op)
plot(1:5, col=c(1:5))
plot(1:5, col=c(1:5), pch=16, cex=4)
plot(1:5, col=c(1:5), pch=16, cex=10)
